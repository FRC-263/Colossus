#include "Arm.h"
#include "../Defines.h"

Arm::Arm(void) {
	towerMotor = new Victor(TOWER_MOTOR);
	wristMotor = new Victor(WRIST_MOTOR);
	clawMotor = new Victor(CLAW_MOTOR);

	towerPot = new AnalogChannel(TOWER_POT);
	wristPot = new AnalogChannel(WRIST_POT);
	clawPot = new AnalogChannel(CLAW_POT);

	towerPID = new AfterPID(3,0,.125);
<<<<<<< .mine
	wristPID = new AfterPID(.59,.006,0);
	clawPID = new AfterPID(.35,.01,.00001);
	
	towerLimit = new DigitalInput(14);
	
	StopArmControl = false;
=======
	wristPID = new AfterPID(.59,.006,0);
	clawPID = new AfterPID(.35,.01,.00001);
	
	towerLimit = new DigitalInput(7);
	
	StopArmControl = false;
>>>>>>> .r83
}

float Arm::GetTowerPot() {
	
	return towerPot->GetVoltage();
}

float Arm::GetWristPot() {
	return wristPot->GetVoltage();
}

float Arm::GetClawPot() {
	return clawPot->GetVoltage();
}

<<<<<<< .mine
bool Arm::SetStartingPosition()
{
	StopArmControl = true;
	float tower_voltage = towerPID->GetOutput(GetTowerPot(), TOWER_END, 0,
				.03) * -1;
	clawPID->SetPID(.375,.01,.00001);
	float claw_voltage = clawPID->GetOutput(GetClawPot(), CLAW_START, 0, .15);
	float wrist_voltage = wristPID->GetOutput(GetWristPot(), WRIST_MIN, 0,
			.05) * -1;
	
	if(tower_voltage == 0 && claw_voltage == 0 && wrist_voltage == 0)
	{
		towerMotor->Set(0);
		wristMotor->Set(0);
		clawMotor->Set(0);
		return true;
	}
	else
	{
		towerMotor->Set(tower_voltage);
		wristMotor->Set(wrist_voltage);
		clawMotor->Set(claw_voltage);
	}
	return false;
}

bool Arm::SetClawClose()
{
	clawPID->SetPID(.5,.01,.00001);
	float claw_voltage = clawPID->GetOutput(GetClawPot(), AUTO_CLAW_SCORING, 0, .1);
	if(claw_voltage == 0)
	{
		clawMotor->Set(0);
		return true;
	}
	else
		clawMotor->Set(claw_voltage);
	return false;
}

bool Arm::RaiseTower()
{
		float tower_voltage = towerPID->GetOutput(GetTowerPot(), AUTO_TOWER_SCORING_UP, 0,
					.03) * -1;
		
		if(tower_voltage == 0)
		{
			towerMotor->Set(0);
			return true;
		}
		else
		{
			towerMotor->Set(tower_voltage);
		}
		return false;
}

bool Arm::SetScoringPosition()
{
	float claw_voltage = clawPID->GetOutput(GetClawPot(), AUTO_CLAW_SCORING, 0, .3);
	float wrist_voltage = wristPID->GetOutput(GetWristPot(), AUTO_WRIST_SCORING, 0,
			.2) * -1;
	
	if(claw_voltage == 0 && wrist_voltage == 0)
	{
		wristMotor->Set(0);
		clawMotor->Set(0);
		return true;
	}
	else
	{
		wristMotor->Set(wrist_voltage);
		clawMotor->Set(claw_voltage);
	}
	return false;
}

bool Arm::ScoreTube()
{
	float tower_voltage = towerPID->GetOutput(GetTowerPot(), AUTO_TOWER_SCORING_DOWN, 0,
				.03) * -1;
	float claw_voltage = clawPID->GetOutput(GetClawPot(), CLAW_OPEN, 0, .1);
	
	if(tower_voltage == 0 && claw_voltage == 0)
	{
		towerMotor->Set(0);
		clawMotor->Set(0);
		return true;
	}
	else
	{
		towerMotor->Set(tower_voltage);
		clawMotor->Set(claw_voltage);
	}
	return false;
}

=======
bool Arm::SetStartingPosition()
{
	printf("Setting starting position\n");
	StopArmControl = true;
	float tower_voltage = towerPID->GetOutput(GetTowerPot(), TOWER_MAX, 0,
				.03) * -1;
	clawPID->SetPID(.375,.01,.00001);
	float claw_voltage = clawPID->GetOutput(GetClawPot(), CLAW_START, 0, .15);
	float wrist_voltage = wristPID->GetOutput(GetWristPot(), WRIST_MIN, 0,
			.05) * -1;
	
	if(tower_voltage == 0 && claw_voltage == 0 && wrist_voltage == 0)
	{
		towerMotor->Set(0);
		wristMotor->Set(0);
		clawMotor->Set(0);
		return true;
	}
	else
	{
		towerMotor->Set(tower_voltage);
		wristMotor->Set(wrist_voltage);
		clawMotor->Set(claw_voltage);
	}
	return false;
}

bool Arm::SetClawClose()
{
	printf("Claw Closing\n");
	clawPID->SetPID(.5,.01,.00001);
	float claw_voltage = clawPID->GetOutput(GetClawPot(), AUTO_CLAW_SCORING, 0, .1);
	if(claw_voltage == 0)
	{
		clawMotor->Set(0);
		return true;
	}
	else
		clawMotor->Set(claw_voltage);
	return false;
}

bool Arm::RaiseTower()
{
		float tower_voltage = towerPID->GetOutput(GetTowerPot(), AUTO_TOWER_SCORING_UP, 0,
					.03) * -1;
		
		if(tower_voltage == 0)
		{
			towerMotor->Set(0);
			return true;
		}
		else
		{
			towerMotor->Set(tower_voltage);
		}
		return false;
}

bool Arm::SetScoringPosition()
{
	printf("Setting scoring position\n");
	float claw_voltage = clawPID->GetOutput(GetClawPot(), AUTO_CLAW_SCORING, 0, .3);
	float wrist_voltage = wristPID->GetOutput(GetWristPot(), AUTO_WRIST_SCORING, 0,
			.3) * -1;
	
	if(claw_voltage == 0 && wrist_voltage == 0)
	{
		wristMotor->Set(0);
		clawMotor->Set(0);
		return true;
	}
	else
	{
		wristMotor->Set(wrist_voltage);
		clawMotor->Set(claw_voltage);
	}
	return false;
}

bool Arm::ScoreTube()
{
	printf("scoring\n");
	float tower_voltage = towerPID->GetOutput(GetTowerPot(), AUTO_TOWER_SCORING_DOWN, 0,
				.03) * -1;
	float claw_voltage = clawPID->GetOutput(GetClawPot(), CLAW_OPEN, 0, .1);
	
	if(tower_voltage == 0 && claw_voltage == 0)
	{
		towerMotor->Set(0);
		clawMotor->Set(0);
		return true;
	}
	else
	{
		towerMotor->Set(tower_voltage);
		clawMotor->Set(claw_voltage);
	}
	return false;
}

>>>>>>> .r83
void Arm::DriveArm() {
	float claw_target= CLAW_OPEN;

	DriverStation *ds = DriverStation::GetInstance();

	float wrist_target = ds->GetAnalogIn(3) * WRIST_MAX;
	float tower_target = ds->GetAnalogIn(1) * TOWER_MAX;

	if (tower_target > TOWER_MAX)
		tower_target = TOWER_MAX;
	else if (tower_target < TOWER_MIN)
		tower_target = TOWER_MIN;

	if (wrist_target < WRIST_MIN)
		wrist_target = WRIST_MIN;
	if (wrist_target > WRIST_MAX)
		wrist_target = WRIST_MAX;

	if (ds->GetDigitalIn(1)) {
		claw_target = CLAW_CLOSED;
	}

	float tower_voltage = towerPID->GetOutput(GetTowerPot(), tower_target, 0,
			.03) * -1;
	float claw_voltage = clawPID->GetOutput(GetClawPot(), claw_target, 0, .1);
	float wrist_voltage = wristPID->GetOutput(GetWristPot(), wrist_target, 0,
			.2) * -1;
<<<<<<< .mine
	
	if(!towerLimit->Get() && tower_voltage < 0)
	{
		tower_voltage = 0;
		towerMotor->Set(0);
	}
	
	if(fabs(claw_voltage) > .5)
		wrist_voltage = 0;
	
	if (!ds->GetDigitalIn(3) && !StopArmControl) {
		towerMotor->Set(tower_voltage);
		wristMotor->Set(wrist_voltage);
		clawMotor->Set(claw_voltage);
	} else {
		towerMotor->Set(0);
		wristMotor->Set(0);
		clawMotor->Set(0);
=======
	
	if(!towerLimit->Get() && tower_voltage < 0)
	{
		printf("OH SHIT BAIL! (Background: MY LEG! Some Other Guy: TIS' BUT A FLESH WOUND!)\n");
		tower_voltage = 0;
	}
	
	if(fabs(claw_voltage) > .5)
		wrist_voltage = 0;
		
	/*printf("Tower Pot: %f\n", GetTowerPot());
	printf("Contral Panel Pot: %f\n", tower_target);
	printf("Tower Volt: %f\n", tower_voltage);*/
/*
	printf("Wrist Pot: %f\n", GetWristPot());
	printf("Wrist_Target: %f\n", wrist_target);
	printf("Wrist Volt: %f\n", wrist_voltage);
*/
	/*printf("Wrist Pot: %f\n", GetClawPot());
	 printf("Wrist Target: %f\n", claw_target);
	 printf("Wrist Volt: %f\n", claw_voltage);*/

	if(!StopArmControl)
	{
		if (!ds->GetDigitalIn(3)) {
			towerMotor->Set(tower_voltage);
			wristMotor->Set(wrist_voltage);
			clawMotor->Set(claw_voltage);
		} else {
			towerMotor->Set(0);
			wristMotor->Set(0);
			clawMotor->Set(0);
		}
>>>>>>> .r83
	}
}
